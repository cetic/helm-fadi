{{- if .Values.traefik.enabled -}}
{{- if and (.Values.grafana.enabled) (.Values.grafana.traefikIngress.enabled) -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
spec:
  entryPoints:
    - websecure
    - web
  routes:
  - kind: Rule
    match: Host(`{{ .Values.grafana.traefikIngress.host }}`) && PathPrefix(`/`)
    services:
    - name: {{ .Release.Name }}-grafana
      port: 80
  {{- if .Values.grafana.traefikIngress.tls }}
  tls:
    secretName: {{ .Values.grafana.traefikIngress.host }}
  {{- end }}
---
{{- end }}

{{- if and (.Values.nifi.enabled) (.Values.nifi.traefikIngress.enabled) -}}
{{- if .Values.nifi.properties.clusterSecure -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: nifi
spec:
  entryPoints:
    - websecure
  routes:
  - match: HostSNI(`{{ .Values.nifi.traefikIngress.host }}`)
    services:
      - name: {{ .Release.Name }}-nifi
        port: {{ .Values.nifi.properties.httpsPort }}
  tls:
    passthrough: true
---
{{- else }}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: nifi
spec:
  entryPoints:
    - websecure
    - web
  routes:
  - kind: Rule
    match: Host(`{{ .Values.nifi.traefikIngress.host }}`) && PathPrefix(`/`)
    services:
    - name: {{ .Release.Name }}-nifi
      port: {{ .Values.nifi.properties.httpPort }}
  {{- if .Values.nifi.traefikIngress.tls }}
  tls:
    secretName: {{ .Values.nifi.traefikIngress.host }}
  {{- end }}
---
{{- end }}
{{- end }}

{{- if and (.Values.jupyterhub.enabled) (.Values.jupyterhub.traefikIngress.enabled) -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: hub
spec:
  entryPoints:
    - websecure
    - web
  routes:
  - kind: Rule
    match: Host(`{{ .Values.jupyterhub.traefikIngress.host }}`) && PathPrefix(`/`)
    services:
    - name: proxy-public
      port: 80
  {{- if .Values.grafana.traefikIngress.tls }}
  tls:
    secretName: {{ .Values.jupyterhub.traefikIngress.host }}
  {{- end }}
---
{{- end }}

{{- if .Values.traefik.dashboardIngress.enabled -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`{{ .Values.traefik.dashboardHost }}`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
---
{{- end }}

{{- if and (.Values.superset.enabled) (.Values.superset.traefikIngress.enabled) -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: superset
spec:
  entryPoints:
    - websecure
    - web
  routes:
  - kind: Rule
    match: Host(`{{ .Values.superset.traefikIngress.host }}`) && PathPrefix(`/`)
    services:
    - name: {{ .Release.Name }}-superset
      port: 9000
  {{- if .Values.grafana.traefikIngress.tls }}
  tls:
    secretName: {{ .Values.superset.traefikIngress.host }}
  {{- end }}
---
{{- end }}

{{- end }}